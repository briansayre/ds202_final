library(tidyverse)
library(ggplot2)
library(lubridate)
library(readxl)
# install.packages("reshape", repos = "http://cran.us.r-project.org")
library(reshape)
# install.packages("ggpubr", repos = "http://cran.us.r-project.org")
library(ggpubr)
genres <- read.csv("./1921_2020_spotify/data_by_genres.csv")
artists <- read.csv("./1921_2020_spotify/data_w_genres.csv")
topArtists <- arrange(artists, -popularity) %>%
filter(genres != "[]") %>%
head(100)
topArtists$genres <- substr(topArtists$genres, 3, nchar(topArtists$genres)-2)
topArtistsList <- topArtists %>%
separate(col=genres, sep="\', \'", into=c("g1", "g2", "g3", "g4", "g5", "g6"))
genreTable <- table(topArtistsList$g1)
genreCount <- as.data.frame(genreTable)
genreCount <- filter(genreCount, Freq > 2)
ggplot(genreCount,aes(x=reorder(Var1, -Freq), y=Freq)) +
geom_bar(stat='identity', fill="blue") +
xlab("Artists' Genre") +
ylab("Number of occurances in top 100 Artists")
cols <- c("artists", "acousticness", "danceability", "energy", "instrumentalness", "liveness", "speechiness", "valence")
latinArtists <- topArtistsList %>%
filter(g1 == "latin") %>%
head(3) %>%
select(cols)
popArtists <- topArtistsList %>%
filter(g1 == "pop") %>%
head(3) %>%
select(cols)
genresTop <- genres %>%
dplyr::rename(artists = genres) %>%
select(cols) %>%
filter(artists == "latin" | artists == "pop")
featureCols <- c("acousticness",	"danceability",	"energy",	"instrumentalness",	"liveness", "speechiness", "valence")
latinBoth <- rbind(genresTop %>% filter(artists == "latin"), latinArtists)
latinMelted <- melt(latinBoth, id.vars="artists", measure.vars=featureCols, variable_name = "feature")
latinPlot <- ggplot(latinMelted, aes(feature, value, fill=artists)) +
geom_bar(stat = "identity", position = 'dodge')+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjus=1))
popBoth <- rbind(genresTop %>% filter(artists == "pop"), popArtists)
popMelted <- melt(popBoth, id.vars="artists", measure.vars=featureCols, variable_name = "feature")
popPlot <- ggplot(popMelted, aes(feature, value, fill=artists)) +
geom_bar(stat = "identity", position = 'dodge')+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjus=1))
ggarrange(latinPlot, popPlot,
labels = c("A", "B"),
ncol = 2, nrow = 2)
library(tidyverse)
library(ggplot2)
library(lubridate)
library(readxl)
# install.packages("reshape", repos = "http://cran.us.r-project.org")
library(reshape)
# install.packages("ggpubr", repos = "http://cran.us.r-project.org")
library(ggpubr)
genres <- read.csv("./1921_2020_spotify/data_by_genres.csv")
artists <- read.csv("./1921_2020_spotify/data_w_genres.csv")
topArtists <- arrange(artists, -popularity) %>%
filter(genres != "[]") %>%
head(100)
topArtists$genres <- substr(topArtists$genres, 3, nchar(topArtists$genres)-2)
topArtistsList <- topArtists %>%
separate(col=genres, sep="\', \'", into=c("g1", "g2", "g3", "g4", "g5", "g6"))
genreTable <- table(topArtistsList$g1)
genreCount <- as.data.frame(genreTable)
genreCount <- filter(genreCount, Freq > 2)
ggplot(genreCount,aes(x=reorder(Var1, -Freq), y=Freq)) +
geom_bar(stat='identity', fill="blue") +
xlab("Artists' Genre") +
ylab("Number of occurances in top 100 Artists")
cols <- c("artists", "acousticness", "danceability", "energy", "instrumentalness", "liveness", "speechiness", "valence")
latinArtists <- topArtistsList %>%
filter(g1 == "latin") %>%
head(3) %>%
select(cols)
popArtists <- topArtistsList %>%
filter(g1 == "pop") %>%
head(3) %>%
select(cols)
genresTop <- genres %>%
dplyr::rename(artists = genres) %>%
select(cols) %>%
filter(artists == "latin" | artists == "pop")
featureCols <- c("acousticness",	"danceability",	"energy",	"instrumentalness",	"liveness", "speechiness", "valence")
latinBoth <- rbind(genresTop %>% filter(artists == "latin"), latinArtists)
latinMelted <- melt(latinBoth, id.vars="artists", measure.vars=featureCols, variable_name = "feature")
latinPlot <- ggplot(latinMelted, aes(feature, value, fill=artists)) +
geom_bar(stat = "identity", position = 'dodge')+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjus=1))
popBoth <- rbind(genresTop %>% filter(artists == "pop"), popArtists)
popMelted <- melt(popBoth, id.vars="artists", measure.vars=featureCols, variable_name = "feature")
popPlot <- ggplot(popMelted, aes(feature, value, fill=artists)) +
geom_bar(stat = "identity", position = 'dodge')+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjus=1))
ggarrange(latinPlot, popPlot,
labels = c("A", "B"),
ncol = 1, nrow = 2)
